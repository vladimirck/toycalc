name: tests
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.4"

      # 1. Análisis de Estilo y Calidad (Linting) para cada módulo
      - name: Run golangci-lint on toycalc-core
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0
          working-directory: ./toycalc-core
          args: ./...

      - name: Run golangci-lint on toycalc-console
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0
          working-directory: ./toycalc-console
          args: ./...

      - name: Run golangci-lint on toycalc-web
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1.0
          working-directory: ./toycalc-web
          args: ./...

      # 2. Escaneo de Seguridad de Código para cada módulo
      - name: Run gosec security scanner on toycalc-core
        uses: securego/gosec@master
        with:
          args: -quiet ./...

      # 3. Comprobación de Vulnerabilidades en Dependencias para cada módulo
      - name: Run govulncheck on toycalc-core
        uses: golang/govulncheck-action@v1
        with:
          go-package: ./toycalc-core

      - name: Run govulncheck on toycalc-console
        uses: golang/govulncheck-action@v1
        with:
          go-package: ./toycalc-console

      - name: Run govulncheck on toycalc-web
        uses: golang/govulncheck-action@v1
        with:
          go-package: ./toycalc-web

      # 4. Ejecución de Pruebas Unitarias para cada módulo
      - name: Test toycalc-core module
        working-directory: ./toycalc-core
        run: go test -race -v ./...

      - name: Test toycalc-console module
        working-directory: ./toycalc-console
        run: go test -race -v ./...
