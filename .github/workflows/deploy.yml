name: Deploy ToyCalc Backend

# Se activa cada vez que haces un push a la rama 'main'
on:
  push:
    branches:
      - main

jobs:
  deploy:
    # La máquina virtual que ejecutará los pasos
    runs-on: ubuntu-latest

    steps:
      # 1. Clona tu repositorio en la máquina virtual
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configura el entorno de Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24" # O la versión de Go que uses

      # 3. Compila la aplicación para Linux
      #    El binario se llamará 'toycalc-web'
      - name: Build application
        working-directory: ./toycalc-web
        run: go get github.com/vladimirck/toycalc/toycalc-core && go build

      # 4. Copia el binario compilado a tu servidor
      - name: Copy binary to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "./toycalc-web"
          target: "/home/${{ secrets.USER }}/toycalc" # Directorio en tu servidor

      # 5. Se conecta a tu servidor y reinicia el servicio
      - name: Restart service on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # El script que se ejecuta en tu servidor
            # Necesita permisos de sudo para reiniciar el servicio
            # Esto requiere una configuración especial (ver Parte 3)
            sudo systemctl restart toycalc.service
